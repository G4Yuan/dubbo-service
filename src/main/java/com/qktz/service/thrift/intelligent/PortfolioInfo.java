/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.qktz.service.thrift.intelligent;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class PortfolioInfo implements org.apache.thrift.TBase<PortfolioInfo, PortfolioInfo._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PortfolioInfo");

  private static final org.apache.thrift.protocol.TField PORTFOLIO_TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("portfolio_title", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField PORTFOLIO_SUMMARY_FIELD_DESC = new org.apache.thrift.protocol.TField("portfolio_summary", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PORTFOLIO_LABELS_FIELD_DESC = new org.apache.thrift.protocol.TField("portfolio_labels", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField RISK_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("risk_level", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField VALID_START_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("valid_start_date", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField INIT_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("init_value", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField PORTFOLIO_CATEGORIES_FIELD_DESC = new org.apache.thrift.protocol.TField("portfolio_categories", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField PORTFOLIO_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("portfolio_status", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField USER_OBJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("user_object_id", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("account_id", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("user_name", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField USER_LOGO_FIELD_DESC = new org.apache.thrift.protocol.TField("user_logo", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField USER_SUMMARY_FIELD_DESC = new org.apache.thrift.protocol.TField("user_summary", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField QUALIFICATION_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("qualificationName", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField QUALIFICATION_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("qualificationNum", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField PFL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("pfl_id", org.apache.thrift.protocol.TType.I32, (short)16);
  private static final org.apache.thrift.protocol.TField CREATED_AT_FIELD_DESC = new org.apache.thrift.protocol.TField("createdAt", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField UPDATED_AT_FIELD_DESC = new org.apache.thrift.protocol.TField("updatedAt", org.apache.thrift.protocol.TType.STRING, (short)18);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new PortfolioInfoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new PortfolioInfoTupleSchemeFactory());
  }

  public String portfolio_title; // required
  public String portfolio_summary; // required
  public String portfolio_labels; // required
  public int risk_level; // required
  public String valid_start_date; // required
  public double init_value; // required
  public String portfolio_categories; // required
  public int portfolio_status; // required
  public String user_object_id; // required
  public String account_id; // required
  public String user_name; // required
  public String user_logo; // required
  public String user_summary; // required
  public String qualificationName; // required
  public String qualificationNum; // required
  public int pfl_id; // required
  public String createdAt; // required
  public String updatedAt; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PORTFOLIO_TITLE((short)1, "portfolio_title"),
    PORTFOLIO_SUMMARY((short)2, "portfolio_summary"),
    PORTFOLIO_LABELS((short)3, "portfolio_labels"),
    RISK_LEVEL((short)4, "risk_level"),
    VALID_START_DATE((short)5, "valid_start_date"),
    INIT_VALUE((short)6, "init_value"),
    PORTFOLIO_CATEGORIES((short)7, "portfolio_categories"),
    PORTFOLIO_STATUS((short)8, "portfolio_status"),
    USER_OBJECT_ID((short)9, "user_object_id"),
    ACCOUNT_ID((short)10, "account_id"),
    USER_NAME((short)11, "user_name"),
    USER_LOGO((short)12, "user_logo"),
    USER_SUMMARY((short)13, "user_summary"),
    QUALIFICATION_NAME((short)14, "qualificationName"),
    QUALIFICATION_NUM((short)15, "qualificationNum"),
    PFL_ID((short)16, "pfl_id"),
    CREATED_AT((short)17, "createdAt"),
    UPDATED_AT((short)18, "updatedAt");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PORTFOLIO_TITLE
          return PORTFOLIO_TITLE;
        case 2: // PORTFOLIO_SUMMARY
          return PORTFOLIO_SUMMARY;
        case 3: // PORTFOLIO_LABELS
          return PORTFOLIO_LABELS;
        case 4: // RISK_LEVEL
          return RISK_LEVEL;
        case 5: // VALID_START_DATE
          return VALID_START_DATE;
        case 6: // INIT_VALUE
          return INIT_VALUE;
        case 7: // PORTFOLIO_CATEGORIES
          return PORTFOLIO_CATEGORIES;
        case 8: // PORTFOLIO_STATUS
          return PORTFOLIO_STATUS;
        case 9: // USER_OBJECT_ID
          return USER_OBJECT_ID;
        case 10: // ACCOUNT_ID
          return ACCOUNT_ID;
        case 11: // USER_NAME
          return USER_NAME;
        case 12: // USER_LOGO
          return USER_LOGO;
        case 13: // USER_SUMMARY
          return USER_SUMMARY;
        case 14: // QUALIFICATION_NAME
          return QUALIFICATION_NAME;
        case 15: // QUALIFICATION_NUM
          return QUALIFICATION_NUM;
        case 16: // PFL_ID
          return PFL_ID;
        case 17: // CREATED_AT
          return CREATED_AT;
        case 18: // UPDATED_AT
          return UPDATED_AT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __RISK_LEVEL_ISSET_ID = 0;
  private static final int __INIT_VALUE_ISSET_ID = 1;
  private static final int __PORTFOLIO_STATUS_ISSET_ID = 2;
  private static final int __PFL_ID_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PORTFOLIO_TITLE, new org.apache.thrift.meta_data.FieldMetaData("portfolio_title", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PORTFOLIO_SUMMARY, new org.apache.thrift.meta_data.FieldMetaData("portfolio_summary", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PORTFOLIO_LABELS, new org.apache.thrift.meta_data.FieldMetaData("portfolio_labels", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RISK_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("risk_level", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "int")));
    tmpMap.put(_Fields.VALID_START_DATE, new org.apache.thrift.meta_data.FieldMetaData("valid_start_date", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INIT_VALUE, new org.apache.thrift.meta_data.FieldMetaData("init_value", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.PORTFOLIO_CATEGORIES, new org.apache.thrift.meta_data.FieldMetaData("portfolio_categories", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PORTFOLIO_STATUS, new org.apache.thrift.meta_data.FieldMetaData("portfolio_status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "int")));
    tmpMap.put(_Fields.USER_OBJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("user_object_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("account_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("user_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_LOGO, new org.apache.thrift.meta_data.FieldMetaData("user_logo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_SUMMARY, new org.apache.thrift.meta_data.FieldMetaData("user_summary", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUALIFICATION_NAME, new org.apache.thrift.meta_data.FieldMetaData("qualificationName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUALIFICATION_NUM, new org.apache.thrift.meta_data.FieldMetaData("qualificationNum", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PFL_ID, new org.apache.thrift.meta_data.FieldMetaData("pfl_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "int")));
    tmpMap.put(_Fields.CREATED_AT, new org.apache.thrift.meta_data.FieldMetaData("createdAt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATED_AT, new org.apache.thrift.meta_data.FieldMetaData("updatedAt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PortfolioInfo.class, metaDataMap);
  }

  public PortfolioInfo() {
  }

  public PortfolioInfo(
    String portfolio_title,
    String portfolio_summary,
    String portfolio_labels,
    int risk_level,
    String valid_start_date,
    double init_value,
    String portfolio_categories,
    int portfolio_status,
    String user_object_id,
    String account_id,
    String user_name,
    String user_logo,
    String user_summary,
    String qualificationName,
    String qualificationNum,
    int pfl_id,
    String createdAt,
    String updatedAt)
  {
    this();
    this.portfolio_title = portfolio_title;
    this.portfolio_summary = portfolio_summary;
    this.portfolio_labels = portfolio_labels;
    this.risk_level = risk_level;
    setRisk_levelIsSet(true);
    this.valid_start_date = valid_start_date;
    this.init_value = init_value;
    setInit_valueIsSet(true);
    this.portfolio_categories = portfolio_categories;
    this.portfolio_status = portfolio_status;
    setPortfolio_statusIsSet(true);
    this.user_object_id = user_object_id;
    this.account_id = account_id;
    this.user_name = user_name;
    this.user_logo = user_logo;
    this.user_summary = user_summary;
    this.qualificationName = qualificationName;
    this.qualificationNum = qualificationNum;
    this.pfl_id = pfl_id;
    setPfl_idIsSet(true);
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PortfolioInfo(PortfolioInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetPortfolio_title()) {
      this.portfolio_title = other.portfolio_title;
    }
    if (other.isSetPortfolio_summary()) {
      this.portfolio_summary = other.portfolio_summary;
    }
    if (other.isSetPortfolio_labels()) {
      this.portfolio_labels = other.portfolio_labels;
    }
    this.risk_level = other.risk_level;
    if (other.isSetValid_start_date()) {
      this.valid_start_date = other.valid_start_date;
    }
    this.init_value = other.init_value;
    if (other.isSetPortfolio_categories()) {
      this.portfolio_categories = other.portfolio_categories;
    }
    this.portfolio_status = other.portfolio_status;
    if (other.isSetUser_object_id()) {
      this.user_object_id = other.user_object_id;
    }
    if (other.isSetAccount_id()) {
      this.account_id = other.account_id;
    }
    if (other.isSetUser_name()) {
      this.user_name = other.user_name;
    }
    if (other.isSetUser_logo()) {
      this.user_logo = other.user_logo;
    }
    if (other.isSetUser_summary()) {
      this.user_summary = other.user_summary;
    }
    if (other.isSetQualificationName()) {
      this.qualificationName = other.qualificationName;
    }
    if (other.isSetQualificationNum()) {
      this.qualificationNum = other.qualificationNum;
    }
    this.pfl_id = other.pfl_id;
    if (other.isSetCreatedAt()) {
      this.createdAt = other.createdAt;
    }
    if (other.isSetUpdatedAt()) {
      this.updatedAt = other.updatedAt;
    }
  }

  public PortfolioInfo deepCopy() {
    return new PortfolioInfo(this);
  }

  @Override
  public void clear() {
    this.portfolio_title = null;
    this.portfolio_summary = null;
    this.portfolio_labels = null;
    setRisk_levelIsSet(false);
    this.risk_level = 0;
    this.valid_start_date = null;
    setInit_valueIsSet(false);
    this.init_value = 0.0;
    this.portfolio_categories = null;
    setPortfolio_statusIsSet(false);
    this.portfolio_status = 0;
    this.user_object_id = null;
    this.account_id = null;
    this.user_name = null;
    this.user_logo = null;
    this.user_summary = null;
    this.qualificationName = null;
    this.qualificationNum = null;
    setPfl_idIsSet(false);
    this.pfl_id = 0;
    this.createdAt = null;
    this.updatedAt = null;
  }

  public String getPortfolio_title() {
    return this.portfolio_title;
  }

  public PortfolioInfo setPortfolio_title(String portfolio_title) {
    this.portfolio_title = portfolio_title;
    return this;
  }

  public void unsetPortfolio_title() {
    this.portfolio_title = null;
  }

  /** Returns true if field portfolio_title is set (has been assigned a value) and false otherwise */
  public boolean isSetPortfolio_title() {
    return this.portfolio_title != null;
  }

  public void setPortfolio_titleIsSet(boolean value) {
    if (!value) {
      this.portfolio_title = null;
    }
  }

  public String getPortfolio_summary() {
    return this.portfolio_summary;
  }

  public PortfolioInfo setPortfolio_summary(String portfolio_summary) {
    this.portfolio_summary = portfolio_summary;
    return this;
  }

  public void unsetPortfolio_summary() {
    this.portfolio_summary = null;
  }

  /** Returns true if field portfolio_summary is set (has been assigned a value) and false otherwise */
  public boolean isSetPortfolio_summary() {
    return this.portfolio_summary != null;
  }

  public void setPortfolio_summaryIsSet(boolean value) {
    if (!value) {
      this.portfolio_summary = null;
    }
  }

  public String getPortfolio_labels() {
    return this.portfolio_labels;
  }

  public PortfolioInfo setPortfolio_labels(String portfolio_labels) {
    this.portfolio_labels = portfolio_labels;
    return this;
  }

  public void unsetPortfolio_labels() {
    this.portfolio_labels = null;
  }

  /** Returns true if field portfolio_labels is set (has been assigned a value) and false otherwise */
  public boolean isSetPortfolio_labels() {
    return this.portfolio_labels != null;
  }

  public void setPortfolio_labelsIsSet(boolean value) {
    if (!value) {
      this.portfolio_labels = null;
    }
  }

  public int getRisk_level() {
    return this.risk_level;
  }

  public PortfolioInfo setRisk_level(int risk_level) {
    this.risk_level = risk_level;
    setRisk_levelIsSet(true);
    return this;
  }

  public void unsetRisk_level() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RISK_LEVEL_ISSET_ID);
  }

  /** Returns true if field risk_level is set (has been assigned a value) and false otherwise */
  public boolean isSetRisk_level() {
    return EncodingUtils.testBit(__isset_bitfield, __RISK_LEVEL_ISSET_ID);
  }

  public void setRisk_levelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RISK_LEVEL_ISSET_ID, value);
  }

  public String getValid_start_date() {
    return this.valid_start_date;
  }

  public PortfolioInfo setValid_start_date(String valid_start_date) {
    this.valid_start_date = valid_start_date;
    return this;
  }

  public void unsetValid_start_date() {
    this.valid_start_date = null;
  }

  /** Returns true if field valid_start_date is set (has been assigned a value) and false otherwise */
  public boolean isSetValid_start_date() {
    return this.valid_start_date != null;
  }

  public void setValid_start_dateIsSet(boolean value) {
    if (!value) {
      this.valid_start_date = null;
    }
  }

  public double getInit_value() {
    return this.init_value;
  }

  public PortfolioInfo setInit_value(double init_value) {
    this.init_value = init_value;
    setInit_valueIsSet(true);
    return this;
  }

  public void unsetInit_value() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __INIT_VALUE_ISSET_ID);
  }

  /** Returns true if field init_value is set (has been assigned a value) and false otherwise */
  public boolean isSetInit_value() {
    return EncodingUtils.testBit(__isset_bitfield, __INIT_VALUE_ISSET_ID);
  }

  public void setInit_valueIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __INIT_VALUE_ISSET_ID, value);
  }

  public String getPortfolio_categories() {
    return this.portfolio_categories;
  }

  public PortfolioInfo setPortfolio_categories(String portfolio_categories) {
    this.portfolio_categories = portfolio_categories;
    return this;
  }

  public void unsetPortfolio_categories() {
    this.portfolio_categories = null;
  }

  /** Returns true if field portfolio_categories is set (has been assigned a value) and false otherwise */
  public boolean isSetPortfolio_categories() {
    return this.portfolio_categories != null;
  }

  public void setPortfolio_categoriesIsSet(boolean value) {
    if (!value) {
      this.portfolio_categories = null;
    }
  }

  public int getPortfolio_status() {
    return this.portfolio_status;
  }

  public PortfolioInfo setPortfolio_status(int portfolio_status) {
    this.portfolio_status = portfolio_status;
    setPortfolio_statusIsSet(true);
    return this;
  }

  public void unsetPortfolio_status() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PORTFOLIO_STATUS_ISSET_ID);
  }

  /** Returns true if field portfolio_status is set (has been assigned a value) and false otherwise */
  public boolean isSetPortfolio_status() {
    return EncodingUtils.testBit(__isset_bitfield, __PORTFOLIO_STATUS_ISSET_ID);
  }

  public void setPortfolio_statusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PORTFOLIO_STATUS_ISSET_ID, value);
  }

  public String getUser_object_id() {
    return this.user_object_id;
  }

  public PortfolioInfo setUser_object_id(String user_object_id) {
    this.user_object_id = user_object_id;
    return this;
  }

  public void unsetUser_object_id() {
    this.user_object_id = null;
  }

  /** Returns true if field user_object_id is set (has been assigned a value) and false otherwise */
  public boolean isSetUser_object_id() {
    return this.user_object_id != null;
  }

  public void setUser_object_idIsSet(boolean value) {
    if (!value) {
      this.user_object_id = null;
    }
  }

  public String getAccount_id() {
    return this.account_id;
  }

  public PortfolioInfo setAccount_id(String account_id) {
    this.account_id = account_id;
    return this;
  }

  public void unsetAccount_id() {
    this.account_id = null;
  }

  /** Returns true if field account_id is set (has been assigned a value) and false otherwise */
  public boolean isSetAccount_id() {
    return this.account_id != null;
  }

  public void setAccount_idIsSet(boolean value) {
    if (!value) {
      this.account_id = null;
    }
  }

  public String getUser_name() {
    return this.user_name;
  }

  public PortfolioInfo setUser_name(String user_name) {
    this.user_name = user_name;
    return this;
  }

  public void unsetUser_name() {
    this.user_name = null;
  }

  /** Returns true if field user_name is set (has been assigned a value) and false otherwise */
  public boolean isSetUser_name() {
    return this.user_name != null;
  }

  public void setUser_nameIsSet(boolean value) {
    if (!value) {
      this.user_name = null;
    }
  }

  public String getUser_logo() {
    return this.user_logo;
  }

  public PortfolioInfo setUser_logo(String user_logo) {
    this.user_logo = user_logo;
    return this;
  }

  public void unsetUser_logo() {
    this.user_logo = null;
  }

  /** Returns true if field user_logo is set (has been assigned a value) and false otherwise */
  public boolean isSetUser_logo() {
    return this.user_logo != null;
  }

  public void setUser_logoIsSet(boolean value) {
    if (!value) {
      this.user_logo = null;
    }
  }

  public String getUser_summary() {
    return this.user_summary;
  }

  public PortfolioInfo setUser_summary(String user_summary) {
    this.user_summary = user_summary;
    return this;
  }

  public void unsetUser_summary() {
    this.user_summary = null;
  }

  /** Returns true if field user_summary is set (has been assigned a value) and false otherwise */
  public boolean isSetUser_summary() {
    return this.user_summary != null;
  }

  public void setUser_summaryIsSet(boolean value) {
    if (!value) {
      this.user_summary = null;
    }
  }

  public String getQualificationName() {
    return this.qualificationName;
  }

  public PortfolioInfo setQualificationName(String qualificationName) {
    this.qualificationName = qualificationName;
    return this;
  }

  public void unsetQualificationName() {
    this.qualificationName = null;
  }

  /** Returns true if field qualificationName is set (has been assigned a value) and false otherwise */
  public boolean isSetQualificationName() {
    return this.qualificationName != null;
  }

  public void setQualificationNameIsSet(boolean value) {
    if (!value) {
      this.qualificationName = null;
    }
  }

  public String getQualificationNum() {
    return this.qualificationNum;
  }

  public PortfolioInfo setQualificationNum(String qualificationNum) {
    this.qualificationNum = qualificationNum;
    return this;
  }

  public void unsetQualificationNum() {
    this.qualificationNum = null;
  }

  /** Returns true if field qualificationNum is set (has been assigned a value) and false otherwise */
  public boolean isSetQualificationNum() {
    return this.qualificationNum != null;
  }

  public void setQualificationNumIsSet(boolean value) {
    if (!value) {
      this.qualificationNum = null;
    }
  }

  public int getPfl_id() {
    return this.pfl_id;
  }

  public PortfolioInfo setPfl_id(int pfl_id) {
    this.pfl_id = pfl_id;
    setPfl_idIsSet(true);
    return this;
  }

  public void unsetPfl_id() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PFL_ID_ISSET_ID);
  }

  /** Returns true if field pfl_id is set (has been assigned a value) and false otherwise */
  public boolean isSetPfl_id() {
    return EncodingUtils.testBit(__isset_bitfield, __PFL_ID_ISSET_ID);
  }

  public void setPfl_idIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PFL_ID_ISSET_ID, value);
  }

  public String getCreatedAt() {
    return this.createdAt;
  }

  public PortfolioInfo setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  public void unsetCreatedAt() {
    this.createdAt = null;
  }

  /** Returns true if field createdAt is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatedAt() {
    return this.createdAt != null;
  }

  public void setCreatedAtIsSet(boolean value) {
    if (!value) {
      this.createdAt = null;
    }
  }

  public String getUpdatedAt() {
    return this.updatedAt;
  }

  public PortfolioInfo setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  public void unsetUpdatedAt() {
    this.updatedAt = null;
  }

  /** Returns true if field updatedAt is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdatedAt() {
    return this.updatedAt != null;
  }

  public void setUpdatedAtIsSet(boolean value) {
    if (!value) {
      this.updatedAt = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PORTFOLIO_TITLE:
      if (value == null) {
        unsetPortfolio_title();
      } else {
        setPortfolio_title((String)value);
      }
      break;

    case PORTFOLIO_SUMMARY:
      if (value == null) {
        unsetPortfolio_summary();
      } else {
        setPortfolio_summary((String)value);
      }
      break;

    case PORTFOLIO_LABELS:
      if (value == null) {
        unsetPortfolio_labels();
      } else {
        setPortfolio_labels((String)value);
      }
      break;

    case RISK_LEVEL:
      if (value == null) {
        unsetRisk_level();
      } else {
        setRisk_level((Integer)value);
      }
      break;

    case VALID_START_DATE:
      if (value == null) {
        unsetValid_start_date();
      } else {
        setValid_start_date((String)value);
      }
      break;

    case INIT_VALUE:
      if (value == null) {
        unsetInit_value();
      } else {
        setInit_value((Double)value);
      }
      break;

    case PORTFOLIO_CATEGORIES:
      if (value == null) {
        unsetPortfolio_categories();
      } else {
        setPortfolio_categories((String)value);
      }
      break;

    case PORTFOLIO_STATUS:
      if (value == null) {
        unsetPortfolio_status();
      } else {
        setPortfolio_status((Integer)value);
      }
      break;

    case USER_OBJECT_ID:
      if (value == null) {
        unsetUser_object_id();
      } else {
        setUser_object_id((String)value);
      }
      break;

    case ACCOUNT_ID:
      if (value == null) {
        unsetAccount_id();
      } else {
        setAccount_id((String)value);
      }
      break;

    case USER_NAME:
      if (value == null) {
        unsetUser_name();
      } else {
        setUser_name((String)value);
      }
      break;

    case USER_LOGO:
      if (value == null) {
        unsetUser_logo();
      } else {
        setUser_logo((String)value);
      }
      break;

    case USER_SUMMARY:
      if (value == null) {
        unsetUser_summary();
      } else {
        setUser_summary((String)value);
      }
      break;

    case QUALIFICATION_NAME:
      if (value == null) {
        unsetQualificationName();
      } else {
        setQualificationName((String)value);
      }
      break;

    case QUALIFICATION_NUM:
      if (value == null) {
        unsetQualificationNum();
      } else {
        setQualificationNum((String)value);
      }
      break;

    case PFL_ID:
      if (value == null) {
        unsetPfl_id();
      } else {
        setPfl_id((Integer)value);
      }
      break;

    case CREATED_AT:
      if (value == null) {
        unsetCreatedAt();
      } else {
        setCreatedAt((String)value);
      }
      break;

    case UPDATED_AT:
      if (value == null) {
        unsetUpdatedAt();
      } else {
        setUpdatedAt((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PORTFOLIO_TITLE:
      return getPortfolio_title();

    case PORTFOLIO_SUMMARY:
      return getPortfolio_summary();

    case PORTFOLIO_LABELS:
      return getPortfolio_labels();

    case RISK_LEVEL:
      return Integer.valueOf(getRisk_level());

    case VALID_START_DATE:
      return getValid_start_date();

    case INIT_VALUE:
      return Double.valueOf(getInit_value());

    case PORTFOLIO_CATEGORIES:
      return getPortfolio_categories();

    case PORTFOLIO_STATUS:
      return Integer.valueOf(getPortfolio_status());

    case USER_OBJECT_ID:
      return getUser_object_id();

    case ACCOUNT_ID:
      return getAccount_id();

    case USER_NAME:
      return getUser_name();

    case USER_LOGO:
      return getUser_logo();

    case USER_SUMMARY:
      return getUser_summary();

    case QUALIFICATION_NAME:
      return getQualificationName();

    case QUALIFICATION_NUM:
      return getQualificationNum();

    case PFL_ID:
      return Integer.valueOf(getPfl_id());

    case CREATED_AT:
      return getCreatedAt();

    case UPDATED_AT:
      return getUpdatedAt();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PORTFOLIO_TITLE:
      return isSetPortfolio_title();
    case PORTFOLIO_SUMMARY:
      return isSetPortfolio_summary();
    case PORTFOLIO_LABELS:
      return isSetPortfolio_labels();
    case RISK_LEVEL:
      return isSetRisk_level();
    case VALID_START_DATE:
      return isSetValid_start_date();
    case INIT_VALUE:
      return isSetInit_value();
    case PORTFOLIO_CATEGORIES:
      return isSetPortfolio_categories();
    case PORTFOLIO_STATUS:
      return isSetPortfolio_status();
    case USER_OBJECT_ID:
      return isSetUser_object_id();
    case ACCOUNT_ID:
      return isSetAccount_id();
    case USER_NAME:
      return isSetUser_name();
    case USER_LOGO:
      return isSetUser_logo();
    case USER_SUMMARY:
      return isSetUser_summary();
    case QUALIFICATION_NAME:
      return isSetQualificationName();
    case QUALIFICATION_NUM:
      return isSetQualificationNum();
    case PFL_ID:
      return isSetPfl_id();
    case CREATED_AT:
      return isSetCreatedAt();
    case UPDATED_AT:
      return isSetUpdatedAt();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PortfolioInfo)
      return this.equals((PortfolioInfo)that);
    return false;
  }

  public boolean equals(PortfolioInfo that) {
    if (that == null)
      return false;

    boolean this_present_portfolio_title = true && this.isSetPortfolio_title();
    boolean that_present_portfolio_title = true && that.isSetPortfolio_title();
    if (this_present_portfolio_title || that_present_portfolio_title) {
      if (!(this_present_portfolio_title && that_present_portfolio_title))
        return false;
      if (!this.portfolio_title.equals(that.portfolio_title))
        return false;
    }

    boolean this_present_portfolio_summary = true && this.isSetPortfolio_summary();
    boolean that_present_portfolio_summary = true && that.isSetPortfolio_summary();
    if (this_present_portfolio_summary || that_present_portfolio_summary) {
      if (!(this_present_portfolio_summary && that_present_portfolio_summary))
        return false;
      if (!this.portfolio_summary.equals(that.portfolio_summary))
        return false;
    }

    boolean this_present_portfolio_labels = true && this.isSetPortfolio_labels();
    boolean that_present_portfolio_labels = true && that.isSetPortfolio_labels();
    if (this_present_portfolio_labels || that_present_portfolio_labels) {
      if (!(this_present_portfolio_labels && that_present_portfolio_labels))
        return false;
      if (!this.portfolio_labels.equals(that.portfolio_labels))
        return false;
    }

    boolean this_present_risk_level = true;
    boolean that_present_risk_level = true;
    if (this_present_risk_level || that_present_risk_level) {
      if (!(this_present_risk_level && that_present_risk_level))
        return false;
      if (this.risk_level != that.risk_level)
        return false;
    }

    boolean this_present_valid_start_date = true && this.isSetValid_start_date();
    boolean that_present_valid_start_date = true && that.isSetValid_start_date();
    if (this_present_valid_start_date || that_present_valid_start_date) {
      if (!(this_present_valid_start_date && that_present_valid_start_date))
        return false;
      if (!this.valid_start_date.equals(that.valid_start_date))
        return false;
    }

    boolean this_present_init_value = true;
    boolean that_present_init_value = true;
    if (this_present_init_value || that_present_init_value) {
      if (!(this_present_init_value && that_present_init_value))
        return false;
      if (this.init_value != that.init_value)
        return false;
    }

    boolean this_present_portfolio_categories = true && this.isSetPortfolio_categories();
    boolean that_present_portfolio_categories = true && that.isSetPortfolio_categories();
    if (this_present_portfolio_categories || that_present_portfolio_categories) {
      if (!(this_present_portfolio_categories && that_present_portfolio_categories))
        return false;
      if (!this.portfolio_categories.equals(that.portfolio_categories))
        return false;
    }

    boolean this_present_portfolio_status = true;
    boolean that_present_portfolio_status = true;
    if (this_present_portfolio_status || that_present_portfolio_status) {
      if (!(this_present_portfolio_status && that_present_portfolio_status))
        return false;
      if (this.portfolio_status != that.portfolio_status)
        return false;
    }

    boolean this_present_user_object_id = true && this.isSetUser_object_id();
    boolean that_present_user_object_id = true && that.isSetUser_object_id();
    if (this_present_user_object_id || that_present_user_object_id) {
      if (!(this_present_user_object_id && that_present_user_object_id))
        return false;
      if (!this.user_object_id.equals(that.user_object_id))
        return false;
    }

    boolean this_present_account_id = true && this.isSetAccount_id();
    boolean that_present_account_id = true && that.isSetAccount_id();
    if (this_present_account_id || that_present_account_id) {
      if (!(this_present_account_id && that_present_account_id))
        return false;
      if (!this.account_id.equals(that.account_id))
        return false;
    }

    boolean this_present_user_name = true && this.isSetUser_name();
    boolean that_present_user_name = true && that.isSetUser_name();
    if (this_present_user_name || that_present_user_name) {
      if (!(this_present_user_name && that_present_user_name))
        return false;
      if (!this.user_name.equals(that.user_name))
        return false;
    }

    boolean this_present_user_logo = true && this.isSetUser_logo();
    boolean that_present_user_logo = true && that.isSetUser_logo();
    if (this_present_user_logo || that_present_user_logo) {
      if (!(this_present_user_logo && that_present_user_logo))
        return false;
      if (!this.user_logo.equals(that.user_logo))
        return false;
    }

    boolean this_present_user_summary = true && this.isSetUser_summary();
    boolean that_present_user_summary = true && that.isSetUser_summary();
    if (this_present_user_summary || that_present_user_summary) {
      if (!(this_present_user_summary && that_present_user_summary))
        return false;
      if (!this.user_summary.equals(that.user_summary))
        return false;
    }

    boolean this_present_qualificationName = true && this.isSetQualificationName();
    boolean that_present_qualificationName = true && that.isSetQualificationName();
    if (this_present_qualificationName || that_present_qualificationName) {
      if (!(this_present_qualificationName && that_present_qualificationName))
        return false;
      if (!this.qualificationName.equals(that.qualificationName))
        return false;
    }

    boolean this_present_qualificationNum = true && this.isSetQualificationNum();
    boolean that_present_qualificationNum = true && that.isSetQualificationNum();
    if (this_present_qualificationNum || that_present_qualificationNum) {
      if (!(this_present_qualificationNum && that_present_qualificationNum))
        return false;
      if (!this.qualificationNum.equals(that.qualificationNum))
        return false;
    }

    boolean this_present_pfl_id = true;
    boolean that_present_pfl_id = true;
    if (this_present_pfl_id || that_present_pfl_id) {
      if (!(this_present_pfl_id && that_present_pfl_id))
        return false;
      if (this.pfl_id != that.pfl_id)
        return false;
    }

    boolean this_present_createdAt = true && this.isSetCreatedAt();
    boolean that_present_createdAt = true && that.isSetCreatedAt();
    if (this_present_createdAt || that_present_createdAt) {
      if (!(this_present_createdAt && that_present_createdAt))
        return false;
      if (!this.createdAt.equals(that.createdAt))
        return false;
    }

    boolean this_present_updatedAt = true && this.isSetUpdatedAt();
    boolean that_present_updatedAt = true && that.isSetUpdatedAt();
    if (this_present_updatedAt || that_present_updatedAt) {
      if (!(this_present_updatedAt && that_present_updatedAt))
        return false;
      if (!this.updatedAt.equals(that.updatedAt))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(PortfolioInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    PortfolioInfo typedOther = (PortfolioInfo)other;

    lastComparison = Boolean.valueOf(isSetPortfolio_title()).compareTo(typedOther.isSetPortfolio_title());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPortfolio_title()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.portfolio_title, typedOther.portfolio_title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPortfolio_summary()).compareTo(typedOther.isSetPortfolio_summary());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPortfolio_summary()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.portfolio_summary, typedOther.portfolio_summary);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPortfolio_labels()).compareTo(typedOther.isSetPortfolio_labels());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPortfolio_labels()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.portfolio_labels, typedOther.portfolio_labels);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRisk_level()).compareTo(typedOther.isSetRisk_level());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRisk_level()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.risk_level, typedOther.risk_level);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValid_start_date()).compareTo(typedOther.isSetValid_start_date());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValid_start_date()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.valid_start_date, typedOther.valid_start_date);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInit_value()).compareTo(typedOther.isSetInit_value());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInit_value()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.init_value, typedOther.init_value);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPortfolio_categories()).compareTo(typedOther.isSetPortfolio_categories());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPortfolio_categories()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.portfolio_categories, typedOther.portfolio_categories);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPortfolio_status()).compareTo(typedOther.isSetPortfolio_status());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPortfolio_status()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.portfolio_status, typedOther.portfolio_status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUser_object_id()).compareTo(typedOther.isSetUser_object_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUser_object_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.user_object_id, typedOther.user_object_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccount_id()).compareTo(typedOther.isSetAccount_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccount_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.account_id, typedOther.account_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUser_name()).compareTo(typedOther.isSetUser_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUser_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.user_name, typedOther.user_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUser_logo()).compareTo(typedOther.isSetUser_logo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUser_logo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.user_logo, typedOther.user_logo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUser_summary()).compareTo(typedOther.isSetUser_summary());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUser_summary()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.user_summary, typedOther.user_summary);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQualificationName()).compareTo(typedOther.isSetQualificationName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQualificationName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.qualificationName, typedOther.qualificationName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQualificationNum()).compareTo(typedOther.isSetQualificationNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQualificationNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.qualificationNum, typedOther.qualificationNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPfl_id()).compareTo(typedOther.isSetPfl_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPfl_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pfl_id, typedOther.pfl_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreatedAt()).compareTo(typedOther.isSetCreatedAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatedAt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createdAt, typedOther.createdAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdatedAt()).compareTo(typedOther.isSetUpdatedAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdatedAt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updatedAt, typedOther.updatedAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PortfolioInfo(");
    boolean first = true;

    sb.append("portfolio_title:");
    if (this.portfolio_title == null) {
      sb.append("null");
    } else {
      sb.append(this.portfolio_title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("portfolio_summary:");
    if (this.portfolio_summary == null) {
      sb.append("null");
    } else {
      sb.append(this.portfolio_summary);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("portfolio_labels:");
    if (this.portfolio_labels == null) {
      sb.append("null");
    } else {
      sb.append(this.portfolio_labels);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("risk_level:");
    sb.append(this.risk_level);
    first = false;
    if (!first) sb.append(", ");
    sb.append("valid_start_date:");
    if (this.valid_start_date == null) {
      sb.append("null");
    } else {
      sb.append(this.valid_start_date);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("init_value:");
    sb.append(this.init_value);
    first = false;
    if (!first) sb.append(", ");
    sb.append("portfolio_categories:");
    if (this.portfolio_categories == null) {
      sb.append("null");
    } else {
      sb.append(this.portfolio_categories);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("portfolio_status:");
    sb.append(this.portfolio_status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("user_object_id:");
    if (this.user_object_id == null) {
      sb.append("null");
    } else {
      sb.append(this.user_object_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("account_id:");
    if (this.account_id == null) {
      sb.append("null");
    } else {
      sb.append(this.account_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("user_name:");
    if (this.user_name == null) {
      sb.append("null");
    } else {
      sb.append(this.user_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("user_logo:");
    if (this.user_logo == null) {
      sb.append("null");
    } else {
      sb.append(this.user_logo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("user_summary:");
    if (this.user_summary == null) {
      sb.append("null");
    } else {
      sb.append(this.user_summary);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("qualificationName:");
    if (this.qualificationName == null) {
      sb.append("null");
    } else {
      sb.append(this.qualificationName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("qualificationNum:");
    if (this.qualificationNum == null) {
      sb.append("null");
    } else {
      sb.append(this.qualificationNum);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pfl_id:");
    sb.append(this.pfl_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createdAt:");
    if (this.createdAt == null) {
      sb.append("null");
    } else {
      sb.append(this.createdAt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("updatedAt:");
    if (this.updatedAt == null) {
      sb.append("null");
    } else {
      sb.append(this.updatedAt);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PortfolioInfoStandardSchemeFactory implements SchemeFactory {
    public PortfolioInfoStandardScheme getScheme() {
      return new PortfolioInfoStandardScheme();
    }
  }

  private static class PortfolioInfoStandardScheme extends StandardScheme<PortfolioInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PortfolioInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PORTFOLIO_TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.portfolio_title = iprot.readString();
              struct.setPortfolio_titleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PORTFOLIO_SUMMARY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.portfolio_summary = iprot.readString();
              struct.setPortfolio_summaryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PORTFOLIO_LABELS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.portfolio_labels = iprot.readString();
              struct.setPortfolio_labelsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RISK_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.risk_level = iprot.readI32();
              struct.setRisk_levelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // VALID_START_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.valid_start_date = iprot.readString();
              struct.setValid_start_dateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // INIT_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.init_value = iprot.readDouble();
              struct.setInit_valueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PORTFOLIO_CATEGORIES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.portfolio_categories = iprot.readString();
              struct.setPortfolio_categoriesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PORTFOLIO_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.portfolio_status = iprot.readI32();
              struct.setPortfolio_statusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // USER_OBJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.user_object_id = iprot.readString();
              struct.setUser_object_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.account_id = iprot.readString();
              struct.setAccount_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.user_name = iprot.readString();
              struct.setUser_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // USER_LOGO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.user_logo = iprot.readString();
              struct.setUser_logoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // USER_SUMMARY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.user_summary = iprot.readString();
              struct.setUser_summaryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // QUALIFICATION_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.qualificationName = iprot.readString();
              struct.setQualificationNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // QUALIFICATION_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.qualificationNum = iprot.readString();
              struct.setQualificationNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // PFL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pfl_id = iprot.readI32();
              struct.setPfl_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // CREATED_AT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createdAt = iprot.readString();
              struct.setCreatedAtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // UPDATED_AT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updatedAt = iprot.readString();
              struct.setUpdatedAtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PortfolioInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.portfolio_title != null) {
        oprot.writeFieldBegin(PORTFOLIO_TITLE_FIELD_DESC);
        oprot.writeString(struct.portfolio_title);
        oprot.writeFieldEnd();
      }
      if (struct.portfolio_summary != null) {
        oprot.writeFieldBegin(PORTFOLIO_SUMMARY_FIELD_DESC);
        oprot.writeString(struct.portfolio_summary);
        oprot.writeFieldEnd();
      }
      if (struct.portfolio_labels != null) {
        oprot.writeFieldBegin(PORTFOLIO_LABELS_FIELD_DESC);
        oprot.writeString(struct.portfolio_labels);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RISK_LEVEL_FIELD_DESC);
      oprot.writeI32(struct.risk_level);
      oprot.writeFieldEnd();
      if (struct.valid_start_date != null) {
        oprot.writeFieldBegin(VALID_START_DATE_FIELD_DESC);
        oprot.writeString(struct.valid_start_date);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(INIT_VALUE_FIELD_DESC);
      oprot.writeDouble(struct.init_value);
      oprot.writeFieldEnd();
      if (struct.portfolio_categories != null) {
        oprot.writeFieldBegin(PORTFOLIO_CATEGORIES_FIELD_DESC);
        oprot.writeString(struct.portfolio_categories);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PORTFOLIO_STATUS_FIELD_DESC);
      oprot.writeI32(struct.portfolio_status);
      oprot.writeFieldEnd();
      if (struct.user_object_id != null) {
        oprot.writeFieldBegin(USER_OBJECT_ID_FIELD_DESC);
        oprot.writeString(struct.user_object_id);
        oprot.writeFieldEnd();
      }
      if (struct.account_id != null) {
        oprot.writeFieldBegin(ACCOUNT_ID_FIELD_DESC);
        oprot.writeString(struct.account_id);
        oprot.writeFieldEnd();
      }
      if (struct.user_name != null) {
        oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
        oprot.writeString(struct.user_name);
        oprot.writeFieldEnd();
      }
      if (struct.user_logo != null) {
        oprot.writeFieldBegin(USER_LOGO_FIELD_DESC);
        oprot.writeString(struct.user_logo);
        oprot.writeFieldEnd();
      }
      if (struct.user_summary != null) {
        oprot.writeFieldBegin(USER_SUMMARY_FIELD_DESC);
        oprot.writeString(struct.user_summary);
        oprot.writeFieldEnd();
      }
      if (struct.qualificationName != null) {
        oprot.writeFieldBegin(QUALIFICATION_NAME_FIELD_DESC);
        oprot.writeString(struct.qualificationName);
        oprot.writeFieldEnd();
      }
      if (struct.qualificationNum != null) {
        oprot.writeFieldBegin(QUALIFICATION_NUM_FIELD_DESC);
        oprot.writeString(struct.qualificationNum);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PFL_ID_FIELD_DESC);
      oprot.writeI32(struct.pfl_id);
      oprot.writeFieldEnd();
      if (struct.createdAt != null) {
        oprot.writeFieldBegin(CREATED_AT_FIELD_DESC);
        oprot.writeString(struct.createdAt);
        oprot.writeFieldEnd();
      }
      if (struct.updatedAt != null) {
        oprot.writeFieldBegin(UPDATED_AT_FIELD_DESC);
        oprot.writeString(struct.updatedAt);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PortfolioInfoTupleSchemeFactory implements SchemeFactory {
    public PortfolioInfoTupleScheme getScheme() {
      return new PortfolioInfoTupleScheme();
    }
  }

  private static class PortfolioInfoTupleScheme extends TupleScheme<PortfolioInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PortfolioInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPortfolio_title()) {
        optionals.set(0);
      }
      if (struct.isSetPortfolio_summary()) {
        optionals.set(1);
      }
      if (struct.isSetPortfolio_labels()) {
        optionals.set(2);
      }
      if (struct.isSetRisk_level()) {
        optionals.set(3);
      }
      if (struct.isSetValid_start_date()) {
        optionals.set(4);
      }
      if (struct.isSetInit_value()) {
        optionals.set(5);
      }
      if (struct.isSetPortfolio_categories()) {
        optionals.set(6);
      }
      if (struct.isSetPortfolio_status()) {
        optionals.set(7);
      }
      if (struct.isSetUser_object_id()) {
        optionals.set(8);
      }
      if (struct.isSetAccount_id()) {
        optionals.set(9);
      }
      if (struct.isSetUser_name()) {
        optionals.set(10);
      }
      if (struct.isSetUser_logo()) {
        optionals.set(11);
      }
      if (struct.isSetUser_summary()) {
        optionals.set(12);
      }
      if (struct.isSetQualificationName()) {
        optionals.set(13);
      }
      if (struct.isSetQualificationNum()) {
        optionals.set(14);
      }
      if (struct.isSetPfl_id()) {
        optionals.set(15);
      }
      if (struct.isSetCreatedAt()) {
        optionals.set(16);
      }
      if (struct.isSetUpdatedAt()) {
        optionals.set(17);
      }
      oprot.writeBitSet(optionals, 18);
      if (struct.isSetPortfolio_title()) {
        oprot.writeString(struct.portfolio_title);
      }
      if (struct.isSetPortfolio_summary()) {
        oprot.writeString(struct.portfolio_summary);
      }
      if (struct.isSetPortfolio_labels()) {
        oprot.writeString(struct.portfolio_labels);
      }
      if (struct.isSetRisk_level()) {
        oprot.writeI32(struct.risk_level);
      }
      if (struct.isSetValid_start_date()) {
        oprot.writeString(struct.valid_start_date);
      }
      if (struct.isSetInit_value()) {
        oprot.writeDouble(struct.init_value);
      }
      if (struct.isSetPortfolio_categories()) {
        oprot.writeString(struct.portfolio_categories);
      }
      if (struct.isSetPortfolio_status()) {
        oprot.writeI32(struct.portfolio_status);
      }
      if (struct.isSetUser_object_id()) {
        oprot.writeString(struct.user_object_id);
      }
      if (struct.isSetAccount_id()) {
        oprot.writeString(struct.account_id);
      }
      if (struct.isSetUser_name()) {
        oprot.writeString(struct.user_name);
      }
      if (struct.isSetUser_logo()) {
        oprot.writeString(struct.user_logo);
      }
      if (struct.isSetUser_summary()) {
        oprot.writeString(struct.user_summary);
      }
      if (struct.isSetQualificationName()) {
        oprot.writeString(struct.qualificationName);
      }
      if (struct.isSetQualificationNum()) {
        oprot.writeString(struct.qualificationNum);
      }
      if (struct.isSetPfl_id()) {
        oprot.writeI32(struct.pfl_id);
      }
      if (struct.isSetCreatedAt()) {
        oprot.writeString(struct.createdAt);
      }
      if (struct.isSetUpdatedAt()) {
        oprot.writeString(struct.updatedAt);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PortfolioInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(18);
      if (incoming.get(0)) {
        struct.portfolio_title = iprot.readString();
        struct.setPortfolio_titleIsSet(true);
      }
      if (incoming.get(1)) {
        struct.portfolio_summary = iprot.readString();
        struct.setPortfolio_summaryIsSet(true);
      }
      if (incoming.get(2)) {
        struct.portfolio_labels = iprot.readString();
        struct.setPortfolio_labelsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.risk_level = iprot.readI32();
        struct.setRisk_levelIsSet(true);
      }
      if (incoming.get(4)) {
        struct.valid_start_date = iprot.readString();
        struct.setValid_start_dateIsSet(true);
      }
      if (incoming.get(5)) {
        struct.init_value = iprot.readDouble();
        struct.setInit_valueIsSet(true);
      }
      if (incoming.get(6)) {
        struct.portfolio_categories = iprot.readString();
        struct.setPortfolio_categoriesIsSet(true);
      }
      if (incoming.get(7)) {
        struct.portfolio_status = iprot.readI32();
        struct.setPortfolio_statusIsSet(true);
      }
      if (incoming.get(8)) {
        struct.user_object_id = iprot.readString();
        struct.setUser_object_idIsSet(true);
      }
      if (incoming.get(9)) {
        struct.account_id = iprot.readString();
        struct.setAccount_idIsSet(true);
      }
      if (incoming.get(10)) {
        struct.user_name = iprot.readString();
        struct.setUser_nameIsSet(true);
      }
      if (incoming.get(11)) {
        struct.user_logo = iprot.readString();
        struct.setUser_logoIsSet(true);
      }
      if (incoming.get(12)) {
        struct.user_summary = iprot.readString();
        struct.setUser_summaryIsSet(true);
      }
      if (incoming.get(13)) {
        struct.qualificationName = iprot.readString();
        struct.setQualificationNameIsSet(true);
      }
      if (incoming.get(14)) {
        struct.qualificationNum = iprot.readString();
        struct.setQualificationNumIsSet(true);
      }
      if (incoming.get(15)) {
        struct.pfl_id = iprot.readI32();
        struct.setPfl_idIsSet(true);
      }
      if (incoming.get(16)) {
        struct.createdAt = iprot.readString();
        struct.setCreatedAtIsSet(true);
      }
      if (incoming.get(17)) {
        struct.updatedAt = iprot.readString();
        struct.setUpdatedAtIsSet(true);
      }
    }
  }

}

